
#lo que hare ahora
class Node:
    def __init__(self, value):
        self.prev = None
        self.count = None
        self.value = value
    def previo(self,nodo):
        self.prev=nodo
    def getvalue(self):
        return self.value

class lista:
    def __init__(self,inicio,final):
        self.list=[None]
        self.head=None
        self.last=None
        self.inicio=inicio
        self.final=final
    def put(self,palabra):
        if self.head==None:
            nodo=Node(palabra)
            cola[None]
            self.list.append(cola[])
            self.last=nodo
            self.head=nodo
        else:
            nodo=Node(palabra)
            self.list.append(nodo)
            self.last=nodo
    def pop(self,pos):
        return self.list.pop(pos)
    def adyacente(self,palabra):
        count=0
        if self.list[0]!=None:
            for j in range(self.list):
                i=1
                while i<5:
                    aux=self.list[j]
                    value=aux.getvalue()
                    if palabra[1]==value[1]:
                        count+=1
                if(count==3 and i==4):
                    aux1=self.list[j]
                    nodo=Node(palabra)
                    nodo.previo(aux1)
                    aux1.add(nodo)

class pila:
    def __init__(self)
        self.head=None
        self.next=None
    def pop(self)
        if self.head==None:
            print("No hay nada")
        else:
            fuera=self.head
            aux=self.next
            self.head=aux
            return fuera
    def put(self,nodo)
        if self.head==None:
            self.head=nodo
        else:
            aux=self.head
            nodo.next=aux
            self.head=nodo


#para los archivo txt
print("Ingrese la palabra:")
inicio=input()
inicio=inicio.upper()
print("Ingrese la palabra Final:")
final=input()
final=final.upper()

#lo que hare mas adelante
listado=lista(inicio,final)
texto.open("words_length_4.txt")
aux=(texto.read().split())
for i in range(len(aux)):
    listado.put(aux(i))
for j in range(len(aux)):
    listado.adyacente(aux(i))